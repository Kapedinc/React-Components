/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import DatePickerImage from 'src/assets/images/TransactionsCard_DatePicker.png';
import DividerImage from 'src/assets/images/TransactionsCard_Divider.png';
import { styled } from '@mui/material/styles';
import TransactionRow from 'src/components/TransactionRow/TransactionRow';
import { TransactionsCardProps } from 'src/types';

const TransactionsCard1: any = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `10px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height: `329px`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
});

const DatePicker: any = styled('img')({
  height: `32px`,
  width: `155px`,
  objectFit: `cover`,
  position: `absolute`,
  left: `275px`,
  top: `20px`,
});

const Title: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(43, 43, 43, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `400`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  width: `190px`,
  height: `29px`,
  position: `absolute`,
  left: `40px`,
  top: `20px`,
});

const Divider: any = styled('img')({
  height: `0px`,
  width: `140px`,
  position: `absolute`,
  left: `40px`,
  top: `59px`,
});

const List: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `370px`,
  left: `40px`,
  top: `79px`,
});

const TransactionRow1: any = styled(TransactionRow)(({ theme }: any) => ({
  alignSelf: `stretch`,
  height: `50px`,
  margin: `0px`,
}));

const TransactionRow2: any = styled(TransactionRow)(({ theme }: any) => ({
  alignSelf: `stretch`,
  height: `50px`,
  margin: `10px 0px 0px 0px`,
}));

const TransactionRow3: any = styled(TransactionRow)(({ theme }: any) => ({
  alignSelf: `stretch`,
  height: `50px`,
  margin: `10px 0px 0px 0px`,
}));

const TransactionRow4: any = styled(TransactionRow)(({ theme }: any) => ({
  alignSelf: `stretch`,
  height: `50px`,
  margin: `10px 0px 0px 0px`,
}));

function TransactionsCard(props: TransactionsCardProps): JSX.Element {
  return (
    <TransactionsCard1 className={props.className}>
      <DatePicker src={DatePickerImage} loading="lazy" alt={'DatePicker'} />
      <Title>{`Transactions`}</Title>
      <Divider src={DividerImage} loading="lazy" alt={'Divider'} />
      <List>
        <TransactionRow1 />
        <TransactionRow2 />
        <TransactionRow3 />
        <TransactionRow4 />
      </List>
    </TransactionsCard1>
  );
}

export default TransactionsCard;
